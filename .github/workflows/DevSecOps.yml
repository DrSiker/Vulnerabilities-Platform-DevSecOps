name: DevSecOps CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt

      - name: Run SAST (Bandit)
        run: |
          pip install bandit
          bandit -r backend/ | tee bandit_report.txt

      - name: Run SCA (JFrog Xray)
        env:
          JFROG_URL: "https://your-jfrog-instance"
          JFROG_USER: "your-username"
          JFROG_PASSWORD: "your-password"
        run: |
          curl -u $JFROG_USER:$JFROG_PASSWORD -X POST "$JFROG_URL/xray/api/v1/scanArtifact" -H "Content-Type: application/json" --data '{"artifact": "backend/requirements.txt"}' | tee jfrog_report.txt

      - name: Run DAST (OWASP ZAP)
        uses: zaproxy/action-full-scan@v0.5.0
        with:
          target: 'http://localhost:5000'
        continue-on-error: true
      
      - name: Parse Reports and Send to Backend
        run: |
          echo "Generating vulnerability report..."
          echo "{" > vulnerabilities.json
          echo "  \"SAST\": " >> vulnerabilities.json
          cat bandit_report.txt | jq -R -s '.' >> vulnerabilities.json
          echo "," >> vulnerabilities.json
          echo "  \"SCA\": " >> vulnerabilities.json
          cat jfrog_report.txt | jq -R -s '.' >> vulnerabilities.json
          echo "}" >> vulnerabilities.json
          
          echo "Sending vulnerabilities to backend..."
          curl -X POST "http://localhost:5000/vulnerabilities" \
          -H "Content-Type: application/json" \
          -d @vulnerabilities.json